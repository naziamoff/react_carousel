{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","imagesCount","props","images","length","translateX","pictureSize","frameSize","step","animationDuration","moveForward","stepsLeft","setState","prevState","moveBack","resetAll","document","getElementById","this","transform","transition","imageStyles","height","width","Object","assign","wrapperStyles","className","type","id","onClick","style","map","image","src","alt","value","onChange","e","target","valueAsNumber","min","max","defaultValue","React","Component","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.18a0563e.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[]\n};\n\ntype State = {\n  imagesCount: number;\n  translateX: number;\n  pictureSize: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n};\n\n// eslint-disable-next-line react/prefer-stateless-function\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    imagesCount: this.props.images.length,\n    translateX: 0,\n    pictureSize: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  moveForward = () => {\n    const {\n      imagesCount, translateX, pictureSize, frameSize, step,\n    } = this.state;\n\n    const lengthLeft = (pictureSize * imagesCount) - translateX;\n    const stepsLeft = (lengthLeft / pictureSize) - frameSize;\n\n    this.setState((\n      prevState,\n    ) => ({\n      translateX: step > stepsLeft\n        ? prevState.translateX + prevState.pictureSize * stepsLeft\n        : prevState.translateX + prevState.pictureSize * step,\n    }));\n  };\n\n  moveBack = () => {\n    const { translateX, step } = this.state;\n\n    if (translateX <= 0) {\n      return;\n    }\n\n    this.setState((\n      prevState,\n    ) => ({\n      translateX: prevState.pictureSize * step > translateX\n        ? 0\n        : prevState.translateX - prevState.pictureSize * step,\n    }));\n  };\n\n  resetAll = () => {\n    this.setState({\n      translateX: 0,\n      pictureSize: 130,\n      frameSize: 3,\n      step: 3,\n      animationDuration: 1000,\n    });\n\n    document.getElementById('size-input');\n  };\n\n  render() {\n    const { pictureSize, frameSize, animationDuration } = this.state;\n    const { images } = this.props;\n    const transform = {\n      transform: `translateX(-${this.state.translateX}px)`,\n      transition: `transform ${animationDuration}ms`,\n    };\n\n    const imageStyles = {\n      height: `${pictureSize}px`,\n      width: `${pictureSize}px`,\n    };\n\n    Object.assign(transform, imageStyles);\n\n    const wrapperStyles = {\n      width: `${frameSize * pictureSize}px`,\n      height: `${pictureSize + 20}px`,\n    };\n\n    return (\n      <div className=\"carousel\">\n        <ul className=\"level\">\n          <button\n            type=\"button\"\n            id=\"button-back\"\n            className=\"button is-medium is-success\"\n            onClick={() => this.moveBack()}\n          >\n            Prev\n          </button>\n          <div\n            className=\"carousel__list-wrapper level\"\n            style={wrapperStyles}\n          >\n            {images.map((image) => (\n              <li\n                key={image}\n                style={transform}\n                className=\"carousel__image\"\n              >\n                <img src={image} alt=\"\" style={imageStyles} />\n              </li>\n            ))}\n          </div>\n          <button\n            className=\"\n              button\n              is-medium\n              is-success\"\n            type=\"button\"\n            id=\"button-forward\"\n            onClick={() => this.moveForward()}\n          >\n            Next\n          </button>\n        </ul>\n        <div className=\"level inputs-container container\">\n          <div className=\"level\">\n            Size\n            <input\n              className=\"input\"\n              type=\"number\"\n              id=\"size-input\"\n              value={this.state.pictureSize}\n              onChange={(e) => (\n                this.setState({ pictureSize: e.target.valueAsNumber })\n              )}\n            />\n          </div>\n          <div className=\"level\">\n            Step\n            <input\n              className=\"input\"\n              id=\"step-input\"\n              type=\"number\"\n              value={this.state.step}\n              min={1}\n              max={9}\n              onChange={(e) => this.setState({ step: e.target.valueAsNumber })}\n            />\n          </div>\n          <div className=\"level\">\n            Frame\n            <input\n              className=\"input\"\n              id=\"frame-input\"\n              type=\"number\"\n              value={this.state.frameSize}\n              min={1}\n              max={9}\n              onChange={(e) => (\n                this.setState({ frameSize: e.target.valueAsNumber })\n              )}\n            />\n          </div>\n          <div className=\"level\">\n            Animation duration\n            <input\n              className=\"input\"\n              id=\"animation-input\"\n              type=\"number\"\n              min={1}\n              defaultValue={this.state.animationDuration}\n              max={10000}\n              onChange={(e) => (\n                this.setState({ animationDuration: e.target.valueAsNumber })\n              )}\n            />\n          </div>\n          <div>\n            <button\n              type=\"button\"\n              className=\"button is-large is-danger\"\n              onClick={() => this.resetAll()}\n            >\n              Reset all\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 className='title has-text-centered' data-cy=\"title\">\n          Carousel with\n          {' '}\n          {images.length}\n          {' '}\n          images\n        </h1>\n\n        <Carousel images={images} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}